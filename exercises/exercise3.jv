
pipeline GoodsPipeline {

        CSVExtractor 
        -> Binary2TextInterpreter
        -> Text2CSVInterpreter
        -> CSVMetadataRemover
        -> YMGDHeaderWriter
        -> ATHeaderWriter
        -> GoodsTableInterpreter
        -> GoodsDBLoader;

    block CSVExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    block Binary2TextInterpreter oftype TextFileInterpreter {
        encoding : "latin3";
    }

   block Text2CSVInterpreter oftype CSVInterpreter {
       delimiter: ";";
      
   }
   block CSVMetadataRemover oftype CellRangeSelector {
        select: range A8:AU*;
    }

     block YMGDHeaderWriter oftype CellWriter {
        at: range A8:E8;
        write: ["year" , "month","goods_id", "goods_name", "goods_source"];
    }
     block ATHeaderWriter oftype CellWriter {
        at:  range AT8:AU8;
        write: ["abroad", "total"];
    }
    
   

    block GoodsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "year"	 oftype PositiveIntegers,
	        "month" oftype	GermanMonth,
	        "goods_id"	oftype GoodID,
	        "goods_name"	oftype text,
	        "goods_source"	oftype text,
	        "abroad"	oftype PositiveIntegers,
            "total"	oftype PositiveIntegers,

        ];
    }

    block GoodsDBLoader oftype SQLiteLoader {
        table: "goods";
        file: "./goodsTransportedByTrain.sqlite";
    }
}

valuetype  PositiveIntegers oftype integer {
    constraints: [ PositiveInt ];
}
constraint PositiveInt oftype RangeConstraint {
    lowerBound: 0;
}

valuetype  GermanMonth oftype text {
    constraints: [ GermanMonthCapitalized ];
}
constraint GermanMonthCapitalized oftype AllowlistConstraint {
    allowlist: ["Januar", "Februar", "MÃ¤rz",
                 "April", "Mai", "Juni",
                 "Juli", "August", "September",
                 "Oktober", "November", "Dezember"
               ];
}

valuetype GoodID oftype text {
    constraints: [IDConstraint];
}
constraint IDConstraint oftype RegexConstraint {
    regex: /^NST7-[A-Z0-9]{3}$/;
}